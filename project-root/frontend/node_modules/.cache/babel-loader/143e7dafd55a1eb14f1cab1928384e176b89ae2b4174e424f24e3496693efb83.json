{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Downloads\\\\FULLSTACK PROJECT\\\\project-root\\\\frontend\\\\src\\\\components\\\\Tasks.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // State for editing a task\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editTitle, setEditTitle] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n\n  // Fetch tasks from backend\n  const fetchTasks = async () => {\n    try {\n      const response = await api.get('/tasks');\n      setTasks(response.data);\n    } catch (err) {\n      console.error('Error fetching tasks', err);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Add a new task\n  const handleAddTask = async e => {\n    e.preventDefault();\n    try {\n      await api.post('/tasks', {\n        title,\n        description\n      });\n      setTitle('');\n      setDescription('');\n      fetchTasks();\n    } catch (err) {\n      console.error('Error adding task', err);\n    }\n  };\n\n  // Toggle task completion\n  const handleToggleComplete = async task => {\n    try {\n      await api.put(`/tasks/${task.id}`, {\n        title: task.title,\n        description: task.description,\n        isComplete: !task.isComplete\n      });\n      fetchTasks();\n    } catch (err) {\n      console.error('Error updating task', err);\n    }\n  };\n\n  // Delete a task\n  const handleDeleteTask = async taskId => {\n    try {\n      await api.delete(`/tasks/${taskId}`);\n      fetchTasks();\n    } catch (err) {\n      console.error('Error deleting task', err);\n    }\n  };\n\n  // Enter editing mode for a task\n  const handleEditTask = task => {\n    setEditingTaskId(task.id);\n    setEditTitle(task.title);\n    setEditDescription(task.description || '');\n  };\n\n  // Cancel editing mode\n  const handleCancelEdit = () => {\n    setEditingTaskId(null);\n    setEditTitle('');\n    setEditDescription('');\n  };\n\n  // Update the task with new values\n  const handleUpdateTask = async e => {\n    e.preventDefault();\n    if (editingTaskId === null) return;\n    try {\n      var _tasks$find;\n      await api.put(`/tasks/${editingTaskId}`, {\n        title: editTitle,\n        description: editDescription,\n        // Retain the current completion status:\n        isComplete: ((_tasks$find = tasks.find(t => t.id === editingTaskId)) === null || _tasks$find === void 0 ? void 0 : _tasks$find.isComplete) || false\n      });\n      setEditingTaskId(null);\n      setEditTitle('');\n      setEditDescription('');\n      fetchTasks();\n    } catch (err) {\n      console.error('Error updating task', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: editingTaskId === task.id ?\n        /*#__PURE__*/\n        // Show edit form for the task being edited\n        _jsxDEV(\"form\", {\n          onSubmit: handleUpdateTask,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editTitle,\n            onChange: e => setEditTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editDescription,\n            onChange: e => setEditDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // Display task info with action buttons\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: task.isComplete ? 'line-through' : 'none',\n              cursor: 'pointer'\n            },\n            onClick: () => handleToggleComplete(task),\n            children: [task.title, \" \", task.description && `- ${task.description}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditTask(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"EBxY4TFkRQ1WV53foozlZkK3hpg=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","tasks","setTasks","title","setTitle","description","setDescription","editingTaskId","setEditingTaskId","editTitle","setEditTitle","editDescription","setEditDescription","fetchTasks","response","get","data","err","console","error","handleAddTask","e","preventDefault","post","handleToggleComplete","task","put","id","isComplete","handleDeleteTask","taskId","delete","handleEditTask","handleCancelEdit","handleUpdateTask","_tasks$find","find","t","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","style","marginBottom","onClick","textDecoration","cursor","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Downloads/FULLSTACK PROJECT/project-root/frontend/src/components/Tasks.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\ninterface Task {\r\n  id: number;\r\n  title: string;\r\n  description?: string;\r\n  isComplete: boolean;\r\n}\r\n\r\nconst Tasks: React.FC = () => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // State for editing a task\r\n  const [editingTaskId, setEditingTaskId] = useState<number | null>(null);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editDescription, setEditDescription] = useState('');\r\n\r\n  // Fetch tasks from backend\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await api.get('/tasks');\r\n      setTasks(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching tasks', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Add a new task\r\n  const handleAddTask = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await api.post('/tasks', { title, description });\r\n      setTitle('');\r\n      setDescription('');\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error('Error adding task', err);\r\n    }\r\n  };\r\n\r\n  // Toggle task completion\r\n  const handleToggleComplete = async (task: Task) => {\r\n    try {\r\n      await api.put(`/tasks/${task.id}`, {\r\n        title: task.title,\r\n        description: task.description,\r\n        isComplete: !task.isComplete,\r\n      });\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error('Error updating task', err);\r\n    }\r\n  };\r\n\r\n  // Delete a task\r\n  const handleDeleteTask = async (taskId: number) => {\r\n    try {\r\n      await api.delete(`/tasks/${taskId}`);\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error('Error deleting task', err);\r\n    }\r\n  };\r\n\r\n  // Enter editing mode for a task\r\n  const handleEditTask = (task: Task) => {\r\n    setEditingTaskId(task.id);\r\n    setEditTitle(task.title);\r\n    setEditDescription(task.description || '');\r\n  };\r\n\r\n  // Cancel editing mode\r\n  const handleCancelEdit = () => {\r\n    setEditingTaskId(null);\r\n    setEditTitle('');\r\n    setEditDescription('');\r\n  };\r\n\r\n  // Update the task with new values\r\n  const handleUpdateTask = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (editingTaskId === null) return;\r\n    try {\r\n      await api.put(`/tasks/${editingTaskId}`, {\r\n        title: editTitle,\r\n        description: editDescription,\r\n        // Retain the current completion status:\r\n        isComplete: tasks.find((t) => t.id === editingTaskId)?.isComplete || false,\r\n      });\r\n      setEditingTaskId(null);\r\n      setEditTitle('');\r\n      setEditDescription('');\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error('Error updating task', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Tasks</h2>\r\n      {/* Form to add a new task */}\r\n      <form onSubmit={handleAddTask}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Add Task</button>\r\n      </form>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id} style={{ marginBottom: '1rem' }}>\r\n            {editingTaskId === task.id ? (\r\n              // Show edit form for the task being edited\r\n              <form onSubmit={handleUpdateTask}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editTitle}\r\n                  onChange={(e) => setEditTitle(e.target.value)}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={editDescription}\r\n                  onChange={(e) => setEditDescription(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Update</button>\r\n                <button type=\"button\" onClick={handleCancelEdit}>\r\n                  Cancel\r\n                </button>\r\n              </form>\r\n            ) : (\r\n              // Display task info with action buttons\r\n              <>\r\n                <span\r\n                  style={{\r\n                    textDecoration: task.isComplete ? 'line-through' : 'none',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onClick={() => handleToggleComplete(task)}\r\n                >\r\n                  {task.title} {task.description && `- ${task.description}`}\r\n                </span>\r\n                <button onClick={() => handleEditTask(task)}>Edit</button>\r\n                <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}